import discord
from discord.ext import commands, tasks
import random
import asyncio
import gc
import aiohttp
import time
from datetime import datetime
from collections import defaultdict, deque
import logging

logging.getLogger('discord').setLevel(logging.ERROR)

# üîπ –ö–û–ù–§–ò–ì
DISCORD_TOKEN = "MTQwNTE5OTg3NzQxMTA0NTQ5Ng.GGDE-P.cuJITY7miG-5Yw_UCi5HtgFCFZhyLTCniqz02o"
OPENAI_API_KEY = "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"

# üöÄ –ë–û–¢ –ö–û–ù–§–ò–ì
intents = discord.Intents.default()
intents.message_content = True

bot = commands.Bot(
    command_prefix=["!", "—Ç!", "T!"],
    intents=intents,
    help_command=@bot.command(name='alive', aliases=['–∂–∏–≤'])
async def alive_cmd(ctx):
    """üî• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"""
    uptime = int(time.time() - stats['start'])
    h, m = uptime // 3600, (uptime % 3600) // 60
    
    await ctx.send(
        f"üî• **–°–£–ü–ï–† –ë–û–¢ –ñ–ñ–ï–¢!**\n"
        f"‚ö° –û–Ω–ª–∞–π–Ω: {h}—á {m}–º | –ö–æ–º–∞–Ω–¥: {stats['cmds']}\n"
        f"üöÄ **–†–ê–ë–û–¢–ê–Æ –ù–ê –ú–ê–ö–°–ò–ú–£–ú 24/7!**\n"
        f"üò¥ **–ê–ù–¢–ò–°–û–ù –ê–ö–¢–ò–í–ï–ù!** –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∑–∞—Å–Ω—É!"
    ),
    case_insensitive=True
)

# üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê
stats = {'cmds': 0, 'ai': 0, 'start': time.time(), 'msgs': 0}
memory = {
    'conversations': defaultdict(lambda: deque(maxlen=3)),
    'user_stats': defaultdict(lambda: {'commands': 0, 'level': 1})
}

# üí¨ –ö–≠–®–ò
QUICK = {
    "–ø—Ä–∏–≤–µ—Ç": ["üëã –ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?", "ü§ñ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!", "üòä –ü—Ä–∏–≤–µ—Ç!"],
    "–∫–∞–∫ –¥–µ–ª–∞": ["üòé –û—Ç–ª–∏—á–Ω–æ!", "üöÄ –°—É–ø–µ—Ä!", "üí™ –ú–æ—â–Ω–æ!"],
    "—Å–ø–∞—Å–∏–±–æ": ["üòä –ü–æ–∂–∞–ª—É–π—Å—Ç–∞!", "ü§ñ –û–±—Ä–∞—â–∞–π—Å—è!", "üí™ –†–∞–¥ –ø–æ–º–æ—á—å!"],
    "–ø–æ–∫–∞": ["üëã –ü–æ–∫–∞!", "ü§ñ –î–æ –≤—Å—Ç—Ä–µ—á–∏!", "üòä –£–≤–∏–¥–∏–º—Å—è!"]
}

JOKES = [
    "üòÇ –ü–æ—á–µ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –Ω–µ –ª—é–±—è—Ç –ø—Ä–∏—Ä–æ–¥—É? –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –±–∞–≥–æ–≤!",
    "ü§£ 99 –±–∞–≥–æ–≤ –≤ –∫–æ–¥–µ, –∏—Å–ø—Ä–∞–≤–∏–ª –æ–¥–∏–Ω - 117 –±–∞–≥–æ–≤!",
    "ü§ñ –ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç = –º–∞—à–∏–Ω–∞ –¥–ª—è –∫–æ—Ñ–µ –≤ –∫–æ–¥!",
    "üíª –†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –º–æ–µ–π –º–∞—à–∏–Ω–µ = –∫–ª–∞—Å—Å–∏–∫–∞!"
]

QUOTES = [
    "üí™ **–ö–∞–∂–¥—ã–π —ç–∫—Å–ø–µ—Ä—Ç –±—ã–ª –Ω–æ–≤–∏—á–∫–æ–º!**",
    "üéØ **–õ—É—á—à–∏–π –∫–æ–¥ - –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–±–æ—Ç–∞–µ—Ç!**", 
    "üöÄ **–î–µ–ª–∞–π, –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π, –∏—Å–ø—Ä–∞–≤–ª—è–π!**",
    "‚ö° **–£—á–∏—Å—å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ!**"
]

session = None

# ====== –°–û–ë–´–¢–ò–Ø ======
@bot.event
async def on_ready():
    global session
    print("üöÄ" * 10)
    print(f"‚úÖ {bot.user} –°–£–ü–ï–† –ë–û–¢ –ê–ö–¢–ò–í–ï–ù!")
    print(f"üìä –°–µ—Ä–≤–µ—Ä–æ–≤: {len(bot.guilds)}")
    
    session = aiohttp.ClientSession(timeout=aiohttp.ClientTimeout(total=20))
    
    await bot.change_presence(
        activity=discord.Game("üöÄ –°–£–ü–ï–† –ë–û–¢ | !help"),
        status=discord.Status.online
    )
    
    # –ó–∞–ø—É—Å–∫ –í–°–ï–• –∞–Ω—Ç–∏—Å–æ–Ω —Å–∏—Å—Ç–µ–º
    if not memory_cleaner.is_running(): memory_cleaner.start()
    if not keep_alive.is_running(): keep_alive.start()  # –ê–ù–¢–ò–°–û–ù!
    if not auto_activity.is_running(): auto_activity.start()
    if not hardcore_activity.is_running(): hardcore_activity.start()  # –•–ê–†–î–ö–û–†!
    if not hourly_ping.is_running(): hourly_ping.start()  # –ï–ñ–ï–ß–ê–°–ù–û!
    if not status_updater.is_running(): status_updater.start()
    
    print("üî• –í–°–ï –ê–ù–¢–ò–°–û–ù –°–ò–°–¢–ï–ú–´ –ó–ê–ü–£–©–ï–ù–´!")
    print("üí™ –ë–û–¢ –¢–ï–ü–ï–†–¨ –ù–ï –ó–ê–°–ù–ï–¢ –ù–ò–ö–û–ì–î–ê!")
    print("‚ö° –•–û–°–¢–ò–ù–ì –ù–ï –°–ú–û–ñ–ï–¢ –û–°–¢–ê–ù–û–í–ò–¢–¨!")

@bot.event  
async def on_message(message):
    if message.author.bot:
        return
    
    stats['msgs'] += 1
    memory['conversations'][message.author.id].append({
        'content': message.content[:100], 'time': time.time()
    })
    
    # –£–ø–æ–º–∏–Ω–∞–Ω–∏–µ
    if bot.user.mentioned_in(message):
        await message.add_reaction("ü§ñ")
        await message.channel.send("ü§ñ **TennaKnight —Ç—É—Ç!** `!help` –¥–ª—è –∫–æ–º–∞–Ω–¥!")
    
    # –ê–≤—Ç–æ–æ—Ç–≤–µ—Ç—ã
    msg_lower = message.content.lower()
    for key, responses in QUICK.items():
        if key in msg_lower:
            await message.channel.send(random.choice(responses))
            break
    
    # –°–ª—É—á–∞–π–Ω—ã–µ —Ä–µ–∞–∫—Ü–∏–∏
    if random.randint(1, 30) == 1:
        await message.add_reaction(random.choice(["üî•", "üí™", "‚ö°", "üöÄ"]))
    
    await bot.process_commands(message)

@bot.event
async def on_command_completion(ctx):
    stats['cmds'] += 1
    memory['user_stats'][ctx.author.id]['commands'] += 1

# üîÑ –°–ò–°–¢–ï–ú–´ + –ê–ù–¢–ò–°–û–ù
@tasks.loop(minutes=15)
async def memory_cleaner():
    gc.collect()

@tasks.loop(minutes=5)  # –ß–ê–°–¢–´–ï –ó–ê–ü–†–û–°–´ –î–õ–Ø –ê–ù–¢–ò–°–û–ù
async def keep_alive():
    """–°–∏—Å—Ç–µ–º–∞ –∞–Ω—Ç–∏—Å–æ–Ω –¥–ª—è —Ö–æ—Å—Ç–∏–Ω–≥–∞"""
    try:
        # –î–µ–ª–∞–µ–º HTTP –∑–∞–ø—Ä–æ—Å –∫ —Å–∞–º–æ–º—É —Å–µ–±–µ (–µ—Å–ª–∏ –µ—Å—Ç—å –≤–µ–±-—Å–µ—Ä–≤–µ—Ä)
        print(f"üî• –ê–ù–¢–ò–°–û–ù: {datetime.now().strftime('%H:%M:%S')} - –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω!")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
        current_time = datetime.now()
        activities = [
            f"üî• –ê–ö–¢–ò–í–ï–ù {current_time.strftime('%H:%M')}",
            f"‚ö° –†–ê–ë–û–¢–ê–Æ {len(bot.guilds)} —Å–µ—Ä–≤.",
            "üöÄ –ù–ï –°–ü–Æ –ù–ò–ö–û–ì–î–ê!",
            f"üí™ –û–ù–õ–ê–ô–ù {int((time.time() - stats['start']) // 3600)}—á"
        ]
        
        activity = discord.Game(random.choice(activities))
        await bot.change_presence(activity=activity, status=discord.Status.online)
        
    except Exception as e:
        print(f"‚ùå –ê–Ω—Ç–∏—Å–æ–Ω –æ—à–∏–±–∫–∞: {e}")

@tasks.loop(minutes=30)
async def auto_activity():
    """–°—É–ø–µ—Ä –∞–∫—Ç–∏–≤–Ω—ã–µ –∞–≤—Ç–æ—Å–æ–æ–±—â–µ–Ω–∏—è"""
    if not bot.guilds: return
    
    msgs = [
        "ü§ñ **TennaKnight –ù–ò–ö–û–ì–î–ê –ù–ï –°–ü–ò–¢!** `!help` –¥–ª—è –∫–æ–º–∞–Ω–¥!",
        "‚ö° **24/7 –†–ï–ñ–ò–ú –ê–ö–¢–ò–í–ï–ù!** `!ask` –¥–ª—è –ò–ò –ø–æ–º–æ—â–∏!",
        "üéÆ **–†–ê–ó–í–õ–ï–ö–ê–ï–ú–°–Ø –ü–û–°–¢–û–Ø–ù–ù–û!** `!joke`, `!game`, `!roll`!",
        "üöÄ **–•–û–°–¢–ò–ù–ì –ù–ï –û–°–¢–ê–ù–û–í–ò–¢ –ú–ï–ù–Ø!** `!ping` –ø—Ä–æ–≤–µ—Ä—å —Å–∫–æ—Ä–æ—Å—Ç—å!",
        f"üî• **–£–ñ–ï {int((time.time() - stats['start']) // 3600)} –ß–ê–°–û–í –û–ù–õ–ê–ô–ù!**",
        "üí™ **–ê–ù–¢–ò–°–û–ù –°–ò–°–¢–ï–ú–ê –†–ê–ë–û–¢–ê–ï–¢!** –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω 24/7!",
        "‚ö° **–ü–†–û–í–ï–†–ö–ê –°–í–Ø–ó–ò!** –û—Ç–≤–µ—á—É –Ω–∞ –ª—é–±—É—é –∫–æ–º–∞–Ω–¥—É –º–≥–Ω–æ–≤–µ–Ω–Ω–æ!"
    ]
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ª—É—á–∞–π–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤
        active_guilds = random.sample(bot.guilds, min(3, len(bot.guilds)))
        
        for guild in active_guilds:
            channel = None
            # –ò—â–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–∞–Ω–∞–ª
            for ch in guild.text_channels:
                if ch.permissions_for(guild.me).send_messages:
                    if any(word in ch.name.lower() for word in ['general', 'chat', 'main', '–±–æ—Ç', '–æ–±—â–∏–π']):
                        channel = ch
                        break
            
            if not channel:
                channel = next((ch for ch in guild.text_channels if ch.permissions_for(guild.me).send_messages), None)
            
            if channel:
                msg = random.choice(msgs)
                sent_msg = await channel.send(msg)
                
                # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∞–∫—Ü–∏–∏ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
                reactions = ["üî•", "‚ö°", "üöÄ", "üí™", "ü§ñ"]
                try:
                    await sent_msg.add_reaction(random.choice(reactions))
                except:
                    pass
                
                print(f"üì§ –ê–≤—Ç–æ—Å–æ–æ–±—â–µ–Ω–∏–µ –≤ {guild.name}: {msg[:30]}...")
                await asyncio.sleep(10)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Å–µ—Ä–≤–µ—Ä–∞–º–∏
                
    except Exception as e:
        print(f"‚ùå –ê–≤—Ç–æ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –æ—à–∏–±–∫–∞: {e}")

@tasks.loop(minutes=10)  # –ö–ê–ñ–î–´–ï 10 –ú–ò–ù–£–¢!
async def hardcore_activity():
    """–•–ê–†–î–ö–û–† –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è —Ö–æ—Å—Ç–∏–Ω–≥–∞"""
    try:
        # –ú–∞—Å—Å–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
        print(f"üí• –•–ê–†–î–ö–û–† –ê–ö–¢–ò–í–ù–û–°–¢–¨: {datetime.now()}")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ
        hardcore_statuses = [
            "üî• –ù–ï –°–ü–Æ –ù–ò–ö–û–ì–î–ê!",
            "‚ö° –•–û–°–¢–ò–ù–ì –ù–ï –û–°–¢–ê–ù–û–í–ò–¢!",
            "üí™ –†–ê–ë–û–¢–ê–Æ –ë–ï–ó –ü–ï–†–ï–†–´–í–ê!",
            "üöÄ 24/7 –¢–£–†–ë–û –†–ï–ñ–ò–ú!",
            f"ü§ñ {stats['cmds']} –ö–û–ú–ê–ù–î –í–´–ü–û–õ–ù–ï–ù–û!",
            f"‚ö° {len(bot.guilds)} –°–ï–†–í–ï–†–û–í –ó–ê–•–í–ê–ß–ï–ù–û!"
        ]
        
        status = discord.Game(random.choice(hardcore_statuses))
        await bot.change_presence(activity=status, status=discord.Status.online)
        
        # –ï—Å–ª–∏ –µ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä—ã - –¥–µ–ª–∞–µ–º —á—Ç–æ-—Ç–æ –∞–∫—Ç–∏–≤–Ω–æ–µ
        if bot.guilds:
            guild = random.choice(bot.guilds)
            # –ü—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            try:
                members_count = len(guild.members)
                print(f"üéØ –ü—Ä–æ–≤–µ—Ä–µ–Ω —Å–µ—Ä–≤–µ—Ä {guild.name}: {members_count} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
            except:
                pass
        
    except Exception as e:
        print(f"‚ùå –•–∞—Ä–¥–∫–æ—Ä –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –æ—à–∏–±–∫–∞: {e}")

@tasks.loop(hours=1)  # –ö–ê–ñ–î–´–ô –ß–ê–°
async def hourly_ping():
    """–ï–∂–µ—á–∞—Å–Ω—ã–π –ø–∏–Ω–≥ –¥–ª—è —Ö–æ—Å—Ç–∏–Ω–≥–∞"""
    try:
        uptime = int((time.time() - stats['start']) // 3600)
        print(f"‚è∞ –ï–ñ–ï–ß–ê–°–ù–´–ô –û–¢–ß–ï–¢: {uptime} —á–∞—Å–æ–≤ –æ–Ω–ª–∞–π–Ω!")
        print(f"üìä –í—ã–ø–æ–ª–Ω–µ–Ω–æ –∫–æ–º–∞–Ω–¥: {stats['cmds']}")
        print(f"ü§ñ –ò–ò –∑–∞–ø—Ä–æ—Å–æ–≤: {stats['ai']}")
        print(f"üì± –°–æ–æ–±—â–µ–Ω–∏–π –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {stats['msgs']}")
        print(f"üåê –°–µ—Ä–≤–µ—Ä–æ–≤ –∞–∫—Ç–∏–≤–Ω–æ: {len(bot.guilds)}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç –≤ —Å–ª—É—á–∞–π–Ω—ã–π –∫–∞–Ω–∞–ª
        if bot.guilds:
            guild = random.choice(bot.guilds)
            for ch in guild.text_channels:
                if ch.permissions_for(guild.me).send_messages:
                    if 'log' in ch.name.lower() or '–±–æ—Ç' in ch.name.lower():
                        await ch.send(f"‚è∞ **–ï–∂–µ—á–∞—Å–Ω—ã–π –æ—Ç—á–µ—Ç:** {uptime}—á –æ–Ω–ª–∞–π–Ω, {stats['cmds']} –∫–æ–º–∞–Ω–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!")
                        break
        
    except Exception as e:
        print(f"‚ùå –ï–∂–µ—á–∞—Å–Ω—ã–π –ø–∏–Ω–≥ –æ—à–∏–±–∫–∞: {e}")

@tasks.loop(hours=2)
async def status_updater():
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∫–∞–∂–¥—ã–µ 2 —á–∞—Å–∞"""
    uptime = int((time.time() - stats['start']) // 3600)
    statuses = [
        discord.Game(f"üöÄ {len(bot.guilds)} —Å–µ—Ä–≤–µ—Ä–æ–≤ | –ê–ö–¢–ò–í–ï–ù"),
        discord.Game(f"‚ö° {stats['cmds']} –∫–æ–º–∞–Ω–¥ | {uptime}—á –û–ù–õ–ê–ô–ù"),
        discord.Game("ü§ñ –°–£–ü–ï–† –ë–û–¢ 2025 | –ù–ï –°–ü–Æ!"),
        discord.Game("üí™ !help | 24/7 –†–ï–ñ–ò–ú"),
        discord.Activity(type=discord.ActivityType.competing, name="üí• –í –ê–ö–¢–ò–í–ù–û–°–¢–ò –° –•–û–°–¢–ò–ù–ì–û–ú"),
        discord.Activity(type=discord.ActivityType.watching, name="üî• –ó–ê –°–¢–ê–ë–ò–õ–¨–ù–û–°–¢–¨–Æ 24/7")
    ]
    try:
        await bot.change_presence(activity=random.choice(statuses), status=discord.Status.online)
        print(f"üîÑ –°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω: –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∫–∞–∂–¥—ã–µ 2—á —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    except Exception as e:
        print(f"‚ùå –°—Ç–∞—Ç—É—Å –æ—à–∏–±–∫–∞: {e}")

# ====== –ö–û–ú–ê–ù–î–´ ======
@bot.command(name='help', aliases=['–ø–æ–º–æ—â—å', 'h'])
async def help_cmd(ctx):
    """üìã –í—Å–µ –∫–æ–º–∞–Ω–¥—ã"""
    embed = discord.Embed(
        title="üöÄ TENNAKNIGHT –°–£–ü–ï–† –ë–û–¢",
        description="–°–∞–º—ã–π –±—ã—Å—Ç—Ä—ã–π –±–æ—Ç 2025!",
        color=0xff0000
    )
    
    embed.add_field(
        name="üß† –ò–ò", 
        value="`!ask [–≤–æ–ø—Ä–æ—Å]` - –£–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫\n`!translate [—Ç–µ–∫—Å—Ç]` - –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫",
        inline=False
    )
    
    embed.add_field(
        name="üéÆ –ò–ì–†–´",
        value="`!joke` - –®—É—Ç–∫–∏ | `!quote` - –¶–∏—Ç–∞—Ç—ã\n`!roll [–∫—É–±–∏–∫]` - –ö—É–±–∏–∫–∏ | `!coin` - –ú–æ–Ω–µ—Ç–∞\n`!rps` - –ö–∞–º–µ–Ω—å-–Ω–æ–∂–Ω–∏—Ü—ã | `!8ball` - –ú–∞–≥–∏—á–µ—Å–∫–∏–π —à–∞—Ä",
        inline=False
    )
    
    embed.add_field(
        name="üìä –°–ò–°–¢–ï–ú–ê",
        value="`!ping` - –°–∫–æ—Ä–æ—Å—Ç—å | `!stats` - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n`!profile` - –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å | `!server` - –û —Å–µ—Ä–≤–µ—Ä–µ",
        inline=False
    )
    
    embed.set_footer(text="‚ö° –ö–æ—Ä–æ—Ç–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã: !–∞, !—à, !—Ü, !–∫, !–ø")
    await ctx.send(embed=embed)

@bot.command(name='ask', aliases=['–∞', 'ai'])
async def ask_ai(ctx, *, question):
    """üß† –ò–ò –ø–æ–º–æ—â–Ω–∏–∫"""
    for key, responses in QUICK.items():
        if key in question.lower():
            await ctx.send(random.choice(responses))
            return
    
    await ctx.message.add_reaction("üß†")
    
    try:
        stats['ai'] += 1
        data = {
            "model": "gpt-3.5-turbo",
            "messages": [
                {"role": "system", "content": "–¢—ã TennaKnight - —Å—É–ø–µ—Ä Discord –±–æ—Ç. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ —Å —ç–º–æ–¥–∑–∏."},
                {"role": "user", "content": question}
            ],
            "max_tokens": 250,
            "temperature": 0.8
        }
        
        async with session.post(
            "https://api.openai.com/v1/chat/completions",
            headers={
                "Authorization": f"Bearer {OPENAI_API_KEY}",
                "Content-Type": "application/json"
            },
            json=data
        ) as response:
            if response.status == 200:
                result = await response.json()
                answer = result['choices'][0]['message']['content'].strip()
                
                embed = discord.Embed(
                    title="üß† TennaKnight AI",
                    description=answer[:500],
                    color=0x4169E1
                )
                embed.set_footer(text=f"AI #{stats['ai']}")
                await ctx.send(embed=embed)
            else:
                await ctx.send(f"‚ùå AI –æ—à–∏–±–∫–∞: {response.status}")
    except:
        await ctx.send("üí• –ò–ò –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!")

@bot.command(name='ping', aliases=['–ø'])
async def ping_cmd(ctx):
    """üèì –°–∫–æ—Ä–æ—Å—Ç—å"""
    start = time.time()
    msg = await ctx.send("üèì")
    latency = round((time.time() - start) * 1000)
    ws = round(bot.latency * 1000)
    await msg.edit(content=f"üèì **{latency}ms** | WS: {ws}ms ‚ö°")

@bot.command(name='stats', aliases=['—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'])
async def stats_cmd(ctx):
    """üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"""
    uptime = int(time.time() - stats['start'])
    h, m = uptime // 3600, (uptime % 3600) // 60
    
    embed = discord.Embed(title="üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê", color=0x00ff00)
    embed.add_field(name="‚è∞ –í—Ä–µ–º—è", value=f"{h}—á {m}–º", inline=True)
    embed.add_field(name="‚ö° –ö–æ–º–∞–Ω–¥", value=stats['cmds'], inline=True)
    embed.add_field(name="ü§ñ AI", value=stats['ai'], inline=True)
    embed.add_field(name="üìä –°–µ—Ä–≤–µ—Ä–æ–≤", value=len(bot.guilds), inline=True)
    embed.add_field(name="üí¨ –°–æ–æ–±—â–µ–Ω–∏–π", value=stats['msgs'], inline=True)
    
    await ctx.send(embed=embed)

@bot.command(name='profile', aliases=['–ø—Ä–æ—Ñ–∏–ª—å'])
async def profile_cmd(ctx, member: discord.Member = None):
    """üë§ –ü—Ä–æ—Ñ–∏–ª—å"""
    user = member or ctx.author
    user_data = memory['user_stats'][user.id]
    
    embed = discord.Embed(
        title=f"üë§ {user.display_name}",
        color=user.color or 0x00ff00
    )
    embed.set_thumbnail(url=user.avatar.url if user.avatar else user.default_avatar.url)
    embed.add_field(name="‚ö° –ö–æ–º–∞–Ω–¥", value=user_data['commands'], inline=True)
    embed.add_field(name="üèÜ –£—Ä–æ–≤–µ–Ω—å", value=user_data['level'], inline=True)
    
    await ctx.send(embed=embed)

@bot.command(name='joke', aliases=['—à', '—à—É—Ç–∫–∞'])
async def joke_cmd(ctx):
    """üòÇ –®—É—Ç–∫–∞"""
    await ctx.send(random.choice(JOKES))

@bot.command(name='quote', aliases=['—Ü', '—Ü–∏—Ç–∞—Ç–∞'])
async def quote_cmd(ctx):
    """üí° –¶–∏—Ç–∞—Ç–∞"""
    await ctx.send(random.choice(QUOTES))

@bot.command(name='roll', aliases=['–∫', '–∫—É–±–∏–∫'])
async def roll_cmd(ctx, dice: str = "1d6"):
    """üé≤ –ö—É–±–∏–∫"""
    try:
        if 'd' not in dice:
            await ctx.send("üé≤ –§–æ—Ä–º–∞—Ç: `!roll 2d6`")
            return
        
        rolls, sides = map(int, dice.split('d'))
        if rolls > 10 or sides > 50:
            await ctx.send("üé≤ –ú–∞–∫—Å–∏–º—É–º: 10d50!")
            return
        
        results = [random.randint(1, sides) for _ in range(rolls)]
        total = sum(results)
        
        if rolls <= 3:
            await ctx.send(f"üé≤ {dice}: {results} = **{total}**")
        else:
            await ctx.send(f"üé≤ {dice}: **{total}**")
    except:
        await ctx.send("üé≤ –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞!")

@bot.command(name='coin', aliases=['–º', '–º–æ–Ω–µ—Ç–∞'])
async def coin_cmd(ctx):
    """ü™ô –ú–æ–Ω–µ—Ç–∞"""
    await ctx.send("ü¶Ö **–û–†–Å–õ!**" if random.randint(0,1) else "üí∞ **–†–ï–®–ö–ê!**")

@bot.command(name='rps', aliases=['–∫–Ω–±'])
async def rps_cmd(ctx, choice=None):
    """‚úÇÔ∏è –ö–∞–º–µ–Ω—å-–Ω–æ–∂–Ω–∏—Ü—ã-–±—É–º–∞–≥–∞"""
    if not choice:
        await ctx.send("‚úÇÔ∏è `!rps –∫–∞–º–µ–Ω—å/–Ω–æ–∂–Ω–∏—Ü—ã/–±—É–º–∞–≥–∞`")
        return
    
    choices = {'–∫–∞–º–µ–Ω—å': 'üóø', '–Ω–æ–∂–Ω–∏—Ü—ã': '‚úÇÔ∏è', '–±—É–º–∞–≥–∞': 'üìÑ', 'rock': 'üóø', 'scissors': '‚úÇÔ∏è', 'paper': 'üìÑ'}
    user_choice = choice.lower()
    
    if user_choice not in choices:
        await ctx.send("‚ùå –í—ã–±–µ—Ä–∏: –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞")
        return
    
    bot_choice = random.choice(['–∫–∞–º–µ–Ω—å', '–Ω–æ–∂–Ω–∏—Ü—ã', '–±—É–º–∞–≥–∞'])
    
    win = {('–∫–∞–º–µ–Ω—å', '–Ω–æ–∂–Ω–∏—Ü—ã'), ('–Ω–æ–∂–Ω–∏—Ü—ã', '–±—É–º–∞–≥–∞'), ('–±—É–º–∞–≥–∞', '–∫–∞–º–µ–Ω—å')}
    
    if user_choice == bot_choice:
        result = "ü§ù –ù–ò–ß–¨–Ø!"
    elif (user_choice, bot_choice) in win:
        result = "üéâ –¢–´ –í–´–ò–ì–†–ê–õ!"
    else:
        result = "üíî –Ø –í–´–ò–ì–†–ê–õ!"
    
    await ctx.send(f"–¢—ã: {choices[user_choice]} | –Ø: {choices[bot_choice]}\n{result}")

@bot.command(name='8ball', aliases=['—à–∞—Ä'])
async def ball_cmd(ctx, *, question=None):
    """üîÆ –ú–∞–≥–∏—á–µ—Å–∫–∏–π —à–∞—Ä"""
    if not question:
        await ctx.send("üîÆ –ó–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å!")
        return
    
    answers = ["‚úÖ –î–∞!", "‚ùå –ù–µ—Ç!", "ü§î –í–æ–∑–º–æ–∂–Ω–æ", "‚ö° –û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ!", "üåü –°–ø—Ä–æ—Å–∏ –ø–æ–∑–∂–µ"]
    await ctx.send(f"üîÆ **{random.choice(answers)}**")

@bot.command(name='translate', aliases=['–ø–µ—Ä–µ–≤–æ–¥'])
async def translate_cmd(ctx, *, text):
    """üåç –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫"""
    await ctx.message.add_reaction("üåç")
    
    try:
        data = {
            "model": "gpt-3.5-turbo",
            "messages": [
                {"role": "system", "content": "–ü–µ—Ä–µ–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç –Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–π —è–∑—ã–∫ (—Ä—É—Å->eng, eng->—Ä—É—Å). –¢–æ–ª—å–∫–æ –ø–µ—Ä–µ–≤–æ–¥."},
                {"role": "user", "content": text}
            ],
            "max_tokens": 200
        }
        
        async with session.post(
            "https://api.openai.com/v1/chat/completions",
            headers={
                "Authorization": f"Bearer {OPENAI_API_KEY}",
                "Content-Type": "application/json"
            },
            json=data
        ) as response:
            if response.status == 200:
                result = await response.json()
                translation = result['choices'][0]['message']['content'].strip()
                
                embed = discord.Embed(title="üåç –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫", color=0x32cd32)
                embed.add_field(name="–ò—Å—Ö–æ–¥–Ω—ã–π", value=text[:300], inline=False)
                embed.add_field(name="–ü–µ—Ä–µ–≤–æ–¥", value=translation[:300], inline=False)
                await ctx.send(embed=embed)
            else:
                await ctx.send("‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞")
    except:
        await ctx.send("üí• –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!")

@bot.command(name='server', aliases=['—Å–µ—Ä–≤–µ—Ä'])
async def server_cmd(ctx):
    """üè∞ –û —Å–µ—Ä–≤–µ—Ä–µ"""
    guild = ctx.guild
    embed = discord.Embed(title=f"üè∞ {guild.name}", color=0x5865f2)
    
    if guild.icon:
        embed.set_thumbnail(url=guild.icon.url)
    
    embed.add_field(name="üëë –í–ª–∞–¥–µ–ª–µ—Ü", value=guild.owner.mention if guild.owner else "???", inline=True)
    embed.add_field(name="üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤", value=len(guild.members), inline=True)
    embed.add_field(name="üí¨ –ö–∞–Ω–∞–ª–æ–≤", value=len(guild.text_channels), inline=True)
    embed.add_field(name="üìÖ –°–æ–∑–¥–∞–Ω", value=guild.created_at.strftime('%d.%m.%Y'), inline=True)
    
    await ctx.send(embed=embed)

@bot.command(name='insomnia', aliases=['–∞–Ω—Ç–∏—Å–æ–Ω', 'nosleep'])
async def insomnia_cmd(ctx):
    """üò¥ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–Ω—Ç–∏—Å–æ–Ω —Å–∏—Å—Ç–µ–º—ã"""
    uptime = int(time.time() - stats['start'])
    h, m = uptime // 3600, (uptime % 3600) // 60
    
    embed = discord.Embed(
        title="üò¥ –ê–ù–¢–ò–°–û–ù –°–ò–°–¢–ï–ú–ê",
        description="**–Ø –ù–ò–ö–û–ì–î–ê –ù–ï –°–ü–Æ!**",
        color=0xff0000
    )
    
    embed.add_field(
        name="üî• –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã",
        value=(
            "‚úÖ Keep-alive –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω\n"
            "‚úÖ –•–∞—Ä–¥–∫–æ—Ä –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω\n"
            "‚úÖ –ê–≤—Ç–æ—Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω\n"
            "‚úÖ –ï–∂–µ—á–∞—Å–Ω—ã–µ –ø–∏–Ω–≥–∏\n"
            "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∫–∞–∂–¥—ã–µ 2—á"
        ),
        inline=False
    )
    
    embed.add_field(
        name="‚è∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
        value=f"–û–Ω–ª–∞–π–Ω: {h}—á {m}–º\n–ö–æ–º–∞–Ω–¥: {stats['cmds']}\n–°–æ–æ–±—â–µ–Ω–∏–π: {stats['msgs']}",
        inline=True
    )
    
    embed.set_footer(text="üí™ –•–û–°–¢–ò–ù–ì –ù–ï –û–°–¢–ê–ù–û–í–ò–¢ –ú–ï–ù–Ø!")
    await ctx.send(embed=embed)

@bot.command(name='force_activity', aliases=['–ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è_–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å'])
async def force_activity_cmd(ctx):
    """‚ö° –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å"""
    if ctx.author.guild_permissions.administrator:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Å–∏—Å—Ç–µ–º—ã –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ
        try:
            await keep_alive()
            await hardcore_activity() 
            await auto_activity()
            await ctx.send("üî• **–í–°–ï –°–ò–°–¢–ï–ú–´ –ê–ö–¢–ò–í–ò–†–û–í–ê–ù–´ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û!**")
        except Exception as e:
            await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: {str(e)[:100]}")
    else:
        await ctx.send("‚ùå –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤!")

@bot.command(name='status_report', aliases=['–æ—Ç—á–µ—Ç'])
async def status_report_cmd(ctx):
    """üìä –ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"""
    uptime = int(time.time() - stats['start'])
    h, m, s = uptime // 3600, (uptime % 3600) // 60, uptime % 60
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º
    systems_status = {
        'keep_alive': keep_alive.is_running(),
        'hardcore_activity': hardcore_activity.is_running(),
        'auto_activity': auto_activity.is_running(),
        'hourly_ping': hourly_ping.is_running(),
        'status_updater': status_updater.is_running()
    }
    
    active_systems = sum(systems_status.values())
    
    embed = discord.Embed(
        title="üìä –ü–û–õ–ù–´–ô –û–¢–ß–ï–¢ –ê–ö–¢–ò–í–ù–û–°–¢–ò",
        color=0x00ff00 if active_systems >= 4 else 0xffff00
    )
    
    embed.add_field(
        name="‚è∞ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã",
        value=f"**{h}—á {m}–º {s}—Å**\n–ë–µ–∑ –ø–µ—Ä–µ—Ä—ã–≤–æ–≤!",
        inline=True
    )
    
    embed.add_field(
        name="üéØ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å",
        value=f"–ö–æ–º–∞–Ω–¥: **{stats['cmds']}**\n–ò–ò: **{stats['ai']}**\n–°–æ–æ–±—â–µ–Ω–∏–π: **{stats['msgs']}**",
        inline=True
    )
    
    embed.add_field(
        name="üåê –û—Ö–≤–∞—Ç", 
        value=f"–°–µ—Ä–≤–µ—Ä–æ–≤: **{len(bot.guilds)}**\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: **{len(bot.users)}**",
        inline=True
    )
    
    # –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º
    system_icons = {True: "‚úÖ", False: "‚ùå"}
    systems_text = "\n".join([
        f"{system_icons[status]} {name.replace('_', ' ').title()}"
        for name, status in systems_status.items()
    ])
    
    embed.add_field(
        name=f"üîß –°–∏—Å—Ç–µ–º—ã ({active_systems}/5)",
        value=systems_text,
        inline=False
    )
    
    embed.set_footer(text=f"üî• –°—Ç–∞—Ç—É—Å: {'–ú–ê–ö–°–ò–ú–ê–õ–¨–ù–ê–Ø –ê–ö–¢–ò–í–ù–û–°–¢–¨' if active_systems >= 4 else '–¢–†–ï–ë–£–ï–¢ –í–ù–ò–ú–ê–ù–ò–Ø'}")
    
    await ctx.send(embed=embed)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
@bot.event
async def on_command_error(ctx, error):
    if isinstance(error, commands.CommandNotFound):
        await ctx.send("‚ùì `!help` –¥–ª—è –∫–æ–º–∞–Ω–¥")
    elif isinstance(error, commands.MissingRequiredArgument):
        await ctx.send("‚ö†Ô∏è –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤!")
    else:
        await ctx.send("üí• –û—à–∏–±–∫–∞!")

# –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–µ—Å—Å–∏–∏
@bot.event
async def on_disconnect():
    if session:
        await session.close()

# ====== –ó–ê–ü–£–°–ö ======
async def main():
    try:
        print("üöÄ TENNAKNIGHT –°–£–ü–ï–† –¢–£–†–ë–û –ë–û–¢!")
        print("‚ö° –ö–æ–º–ø–∞–∫—Ç–Ω–∞—è –º–æ—â—å –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏!")
        print("üî• –ó–ê–ü–£–°–ö...")
        
        await bot.start(DISCORD_TOKEN)
    except Exception as e:
        print(f"üí• –û–®–ò–ë–ö–ê: {e}")
    finally:
        if session:
            await session.close()

if __name__ == "__main__":
    asyncio.run(main())
